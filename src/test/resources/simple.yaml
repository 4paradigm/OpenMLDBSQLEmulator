# call toydb_run_engine to run this yaml file
# you can generate yaml cases for reproduction by simulator dump or by yourself
cases:
  # ref OpenMLDB/cases/query/window_query.yaml
  - id: 12
    desc: window ROWS_RANGE merge
    sql: |
      SELECT id, pk1, col1, std_ts,
      sum(col1) OVER (PARTITION BY pk1 ORDER BY std_ts ROWS_RANGE BETWEEN 10s PRECEDING AND CURRENT ROW) as w1_col1_sum,
      sum(col1) OVER w2 as w2_col1_sum,
      sum(col1) OVER (PARTITION BY pk1 ORDER BY std_ts ROWS_RANGE BETWEEN 30s PRECEDING AND CURRENT ROW) as w3_col1_sum
      FROM t1
      WINDOW w2 AS (PARTITION BY pk1 ORDER BY std_ts ROWS_RANGE BETWEEN 20s PRECEDING AND CURRENT ROW);
    inputs:
      - name: t1
        schema: id:int, pk1:string, col1:int32, std_ts:timestamp
        index: index2:pk1:std_ts
        data: |
          1, A, 1, 1590115420000
          2, B, 1, 1590115420000
          3, A, 2, 1590115430000
          4, B, 2, 1590115430000
          5, A, 3, 1590115440000
          6, B, 3, 1590115440000
          7, A, 4, 1590115450000
          8, B, 4, 1590115450000
          9, A, 5, 1590115460000
          10, B, 5, 1590115460000
          11, A, 6, 1590115470000
          12, A, 7, 1590115480000
          13, A, 8, 1590115490000
          14, A, 9, 1590115500000

    expect:
      schema: id:int, pk1:string, col1:int, std_ts:timestamp, w1_col1_sum:int, w2_col1_sum:int, w3_col1_sum:int
      order: id
      data: |
        1, A, 1, 1590115420000, 1, 1, 1
        2, B, 1, 1590115420000, 1, 1, 1
        3, A, 2, 1590115430000, 3, 3, 3
        4, B, 2, 1590115430000, 3, 3, 3
        5, A, 3, 1590115440000, 5, 6, 6
        6, B, 3, 1590115440000, 5, 6, 6
        7, A, 4, 1590115450000, 7, 9, 10
        8, B, 4, 1590115450000, 7, 9, 10
        9, A, 5, 1590115460000, 9, 12, 14
        10, B, 5, 1590115460000, 9, 12, 14
        11, A, 6, 1590115470000, 11, 15, 18
        12, A, 7, 1590115480000, 13, 18, 22
        13, A, 8, 1590115490000, 15, 21, 26
        14, A, 9, 1590115500000, 17, 24, 30
